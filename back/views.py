import urllib.request, json 
from django.http import JsonResponse
from .db_utils import insert, select

def fetch_data():
    #with urllib.request.urlopen("https://gist.githubusercontent.com/CesarF/24a0d07afa64532a0ee72b32f554ed8f/raw/ae28ea0e1f9eb4e143d96fe932731d24763beb92/points.json") as url:
        #data = json.loads(url.read().decode())
        #return data
    return [{"id": 1, "x": 52, "y": 24, "last-update": "2019-10-05 11:14:46"}, {"id": 2, "x": 56, "y": 19, "last-update": "2020-07-28 02:08:45"}, {"id": 3, "x": 10, "y": 14, "last-update": "2020-01-13 22:10:38"}, {"id": 4, "x": 29, "y": 100, "last-update": "2020-03-02 11:13:30"}, {"id": 5, "x": 88, "y": 57, "last-update": "2019-12-29 23:24:10"}, {"id": 6, "x": 53, "y": 44, "last-update": "2020-07-12 12:42:07"}, {"id": 7, "x": 16, "y": 45, "last-update": "2020-05-23 22:36:28"}, {"id": 8, "x": 76, "y": 61, "last-update": "2020-05-13 18:41:42"}, {"id": 9, "x": 20, "y": 98, "last-update": "2020-04-02 08:19:40"}, {"id": 10, "x": 73, "y": 26, "last-update": "2020-08-03 17:17:51"}, {"id": 11, "x": 11, "y": 95, "last-update": "2020-06-07 05:21:18"}, {"id": 12, "x": 86, "y": 14, "last-update": "2019-11-24 09:00:28"}, {"id": 13, "x": 87, "y": 90, "last-update": "2020-06-03 19:58:43"}, {"id": 14, "x": 13, "y": 98, "last-update": "2019-11-06 01:06:30"}, {"id": 15, "x": 60, "y": 71, "last-update": "2020-01-17 08:29:54"}, {"id": 16, "x": 4, "y": 5, "last-update": "2020-06-21 11:52:54"}, {"id": 17, "x": 50, "y": 25, "last-update": "2019-11-14 21:43:01"}, {"id": 18, "x": 94, "y": 84, "last-update": "2020-04-24 20:34:35"}, {"id": 19, "x": 28, "y": 80, "last-update": "2019-10-14 14:08:44"}, {"id": 20, "x": 62, "y": 10, "last-update": "2020-01-06 17:39:39"}, {"id": 21, "x": 25, "y": 87, "last-update": "2019-11-25 20:09:05"}, {"id": 22, "x": 60, "y": 55, "last-update": "2020-05-18 16:07:17"}, {"id": 23, "x": 58, "y": 19, "last-update": "2020-03-09 06:50:56"}, {"id": 24, "x": 98, "y": 83, "last-update": "2019-08-29 18:02:37"}, {"id": 25, "x": 52, "y": 3, "last-update": "2019-10-10 08:04:15"}, {"id": 26, "x": 48, "y": 37, "last-update": "2019-08-31 05:06:12"}, {"id": 27, "x": 27, "y": 88, "last-update": "2019-08-29 10:31:15"}, {"id": 28, "x": 6, "y": 72, "last-update": "2019-08-16 16:49:38"}, {"id": 29, "x": 50, "y": 30, "last-update": "2020-02-18 08:24:42"}, {"id": 30, "x": 83, "y": 84, "last-update": "2020-01-31 11:24:50"}, {"id": 31, "x": 42, "y": 6, "last-update": "2019-11-22 16:05:44"}, {"id": 32, "x": 40, "y": 14, "last-update": "2020-07-20 19:18:07"}, {"id": 33, "x": 43, "y": 32, "last-update": "2020-03-25 14:17:55"}, {"id": 34, "x": 7, "y": 56, "last-update": "2020-04-16 15:35:17"}, {"id": 35, "x": 72, "y": 50, "last-update": "2020-06-05 09:02:32"}, {"id": 36, "x": 65, "y": 67, "last-update": "2019-11-07 16:45:25"}, {"id": 37, "x": 78, "y": 98, "last-update": "2020-01-22 03:56:33"}, {"id": 38, "x": 45, "y": 99, "last-update": "2019-08-21 09:51:47"}, {"id": 39, "x": 65, "y": 45, "last-update": "2020-04-01 14:01:10"}, {"id": 40, "x": 68, "y": 49, "last-update": "2020-02-13 07:34:21"}, {"id": 41, "x": 14, "y": 91, "last-update": "2019-10-11 11:34:37"}, {"id": 42, "x": 17, "y": 64, "last-update": "2020-05-25 19:52:03"}, {"id": 43, "x": 81, "y": 64, "last-update": "2019-08-23 06:41:21"}, {"id": 44, "x": 71, "y": 50, "last-update": "2020-05-31 17:31:31"}, {"id": 45, "x": 44, "y": 94, "last-update": "2019-08-28 10:09:25"}, {"id": 46, "x": 89, "y": 77, "last-update": "2019-10-30 20:58:01"}, {"id": 47, "x": 88, "y": 48, "last-update": "2020-05-28 17:36:51"}, {"id": 48, "x": 72, "y": 77, "last-update": "2020-05-16 04:47:52"}, {"id": 49, "x": 23, "y": 7, "last-update": "2020-03-08 11:28:41"}, {"id": 50, "x": 60, "y": 1, "last-update": "2020-03-19 09:35:00"}, {"id": 51, "x": 11, "y": 80, "last-update": "2019-12-21 20:52:35"}, {"id": 52, "x": 54, "y": 73, "last-update": "2019-10-29 11:48:44"}, {"id": 53, "x": 3, "y": 95, "last-update": "2020-01-05 17:02:09"}, {"id": 54, "x": 63, "y": 6, "last-update": "2019-12-01 04:33:31"}, {"id": 55, "x": 5, "y": 51, "last-update": "2019-10-02 02:54:42"}, {"id": 56, "x": 18, "y": 25, "last-update": "2020-01-04 17:23:52"}, {"id": 57, "x": 85, "y": 81, "last-update": "2019-08-17 19:01:59"}, {"id": 58, "x": 98, "y": 17, "last-update": "2020-01-17 20:58:24"}, {"id": 59, "x": 38, "y": 40, "last-update": "2019-10-05 15:54:58"}, {"id": 60, "x": 51, "y": 43, "last-update": "2019-11-07 21:22:28"}, {"id": 61, "x": 38, "y": 74, "last-update": "2019-09-15 05:37:05"}, {"id": 62, "x": 21, "y": 35, "last-update": "2020-02-17 14:13:00"}, {"id": 63, "x": 83, "y": 99, "last-update": "2020-03-03 21:01:03"}, {"id": 64, "x": 75, "y": 22, "last-update": "2019-11-24 19:57:00"}, {"id": 65, "x": 97, "y": 68, "last-update": "2019-12-19 02:09:53"}, {"id": 66, "x": 61, "y": 61, "last-update": "2019-11-29 09:15:55"}, {"id": 67, "x": 56, "y": 10, "last-update": "2020-02-15 23:06:09"}, {"id": 68, "x": 29, "y": 28, "last-update": "2019-11-29 09:22:51"}, {"id": 69, "x": 9, "y": 54, "last-update": "2020-01-12 17:41:16"}, {"id": 70, "x": 48, "y": 36, "last-update": "2019-11-25 15:30:53"}, {"id": 71, "x": 85, "y": 51, "last-update": "2019-11-09 00:15:50"}, {"id": 72, "x": 53, "y": 92, "last-update": "2019-10-22 18:51:00"}, {"id": 73, "x": 64, "y": 45, "last-update": "2020-02-12 12:21:24"}, {"id": 74, "x": 63, "y": 72, "last-update": "2020-05-17 03:53:49"}, {"id": 75, "x": 41, "y": 74, "last-update": "2019-12-04 17:51:04"}, {"id": 76, "x": 69, "y": 83, "last-update": "2020-05-02 09:25:09"}, {"id": 77, "x": 6, "y": 14, "last-update": "2019-08-17 02:46:17"}, {"id": 78, "x": 97, "y": 3, "last-update": "2020-05-14 21:14:07"}, {"id": 79, "x": 14, "y": 78, "last-update": "2019-11-16 01:57:58"}, {"id": 80, "x": 41, "y": 21, "last-update": "2020-02-17 19:57:04"}, {"id": 81, "x": 61, "y": 51, "last-update": "2020-02-06 09:16:18"}, {"id": 82, "x": 47, "y": 82, "last-update": "2019-08-10 14:07:14"}, {"id": 83, "x": 36, "y": 1, "last-update": "2019-10-15 23:07:09"}, {"id": 84, "x": 7, "y": 54, "last-update": "2019-11-24 07:29:40"}, {"id": 85, "x": 30, "y": 86, "last-update": "2020-02-08 17:40:40"}, {"id": 86, "x": 65, "y": 87, "last-update": "2020-07-08 19:44:00"}, {"id": 87, "x": 75, "y": 43, "last-update": "2020-06-23 04:41:20"}, {"id": 88, "x": 73, "y": 20, "last-update": "2019-11-08 14:56:57"}, {"id": 89, "x": 26, "y": 46, "last-update": "2020-05-28 20:26:38"}, {"id": 90, "x": 14, "y": 73, "last-update": "2020-01-16 03:28:12"}, {"id": 91, "x": 38, "y": 77, "last-update": "2019-09-24 05:37:40"}, {"id": 92, "x": 21, "y": 41, "last-update": "2020-07-24 03:30:25"}, {"id": 93, "x": 9, "y": 38, "last-update": "2019-09-27 03:21:46"}, {"id": 94, "x": 23, "y": 92, "last-update": "2020-06-13 10:41:25"}, {"id": 95, "x": 60, "y": 57, "last-update": "2019-10-08 16:07:41"}, {"id": 96, "x": 58, "y": 46, "last-update": "2020-07-11 00:37:27"}, {"id": 97, "x": 64, "y": 48, "last-update": "2020-01-15 01:07:44"}, {"id": 98, "x": 82, "y": 92, "last-update": "2019-12-16 11:41:53"}, {"id": 99, "x": 75, "y": 64, "last-update": "2020-05-05 06:05:44"}, {"id": 100, "x": 49, "y": 37, "last-update": "2020-01-20 18:22:44"}]

def calculate_distance( start:tuple, end:tuple )-> float:
    return ((start[0] - end[0])**2 + (start[1] - end[1])**2)**(1/2)

def get_domiciliary_data(request):
    return JsonResponse(fetch_data(), safe=False)

def get_nearest_domicilary(request, x, y):
    data = fetch_data()
    
    nearest = { 'distance': float('inf') }

    for domicilary in data:
        distance = calculate_distance( (x,y), (int(domicilary["x"]), int(domicilary["y"])) )
        if distance < nearest['distance']:
            nearest['distance'] = distance
            nearest['id'] = domicilary['id']
            nearest['x'] = domicilary['x']
            nearest['y'] = domicilary['y']
            nearest['last-update'] = domicilary['last-update']
    
    nearest['distance'] = round( nearest['distance'], 2 )
    insert( nearest['x'], nearest['y'], nearest['id'] )
    
    return JsonResponse({"nearest":nearest, "others":data }, safe=True)

def get_deliveries(request):
    data = select()
    return JsonResponse(data, safe=False)